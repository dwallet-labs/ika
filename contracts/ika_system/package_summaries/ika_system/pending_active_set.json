{
  "id": {
    "address": "ika_system",
    "name": "pending_active_set"
  },
  "doc": " Contains an active set of validators. The active set is a smart collection\n that only stores up to a max size of validators. The active set tracks the total amount of staked\n IKA to make the calculation of the rewards and voting power distribution easier.",
  "immediate_dependencies": [
    {
      "address": "std",
      "name": "option"
    },
    {
      "address": "std",
      "name": "vector"
    },
    {
      "address": "sui",
      "name": "object"
    },
    {
      "address": "sui",
      "name": "vec_set"
    }
  ],
  "attributes": [],
  "functions": {
    "new": {
      "source_index": 0,
      "index": 0,
      "doc": " Creates a new pending active set with the specified configuration parameters.\n\n The `min_validator_joining_stake` is used to filter out validators that do not have enough staked\n IKA to be included in the active set initially. The `max_validator_change_count` limits the number\n of validator additions/removals per epoch.\n\n # Arguments\n * `min_validator_count` - The minimum number of validators required in the active set\n * `max_validator_count` - The maximum number of validators allowed in the active set\n * `min_validator_joining_stake` - The minimum stake required for a validator to join\n * `max_validator_change_count` - The maximum number of validator changes allowed per epoch\n\n # Aborts\n * `EZeroMaxSize` - If `max_validator_count` is zero\n * `EBelowMinValidatorCount` - If `min_validator_count` > `max_validator_count`",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "min_validator_count",
          "type_": "u64"
        },
        {
          "name": "max_validator_count",
          "type_": "u64"
        },
        {
          "name": "min_validator_joining_stake",
          "type_": "u64"
        },
        {
          "name": "max_validator_change_count",
          "type_": "u64"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_system",
              "name": "pending_active_set"
            },
            "name": "PendingActiveSet",
            "type_arguments": []
          }
        }
      ]
    },
    "insert_or_update_or_remove": {
      "source_index": 1,
      "index": 1,
      "doc": " Inserts, updates, or removes a validator based on their stake amount.\n\n This function handles the complete lifecycle of a validator in the active set:\n - If stake is below threshold: attempts to remove the validator\n - If validator exists: updates their stake\n - If validator doesn't exist and has sufficient stake: inserts them\n\n # Arguments\n * `set` - The pending active set to modify\n * `validator_id` - The ID of the validator to process\n * `staked_amount` - The new stake amount for the validator\n\n # Returns\n * `bool` - Whether the validator is in the set after the operation\n * `Option<ID>` - The ID of any validator that was removed, or None",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "staked_amount",
          "type_": "u64"
        }
      ],
      "return_": [
        "bool",
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              {
                "phantom": false,
                "argument": {
                  "Datatype": {
                    "module": {
                      "address": "sui",
                      "name": "object"
                    },
                    "name": "ID",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "update_or_remove": {
      "source_index": 2,
      "index": 2,
      "doc": " Updates an existing validator's stake or removes them if stake is insufficient.\n\n # Arguments\n * `set` - The pending active set to modify\n * `validator_id` - The ID of the validator to update\n * `staked_amount` - The new stake amount for the validator\n\n # Returns\n * `bool` - Whether the validator remains in the set after the operation\n * `Option<ID>` - The ID of the validator if it was removed, or None",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "staked_amount",
          "type_": "u64"
        }
      ],
      "return_": [
        "bool",
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              {
                "phantom": false,
                "argument": {
                  "Datatype": {
                    "module": {
                      "address": "sui",
                      "name": "object"
                    },
                    "name": "ID",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "update": {
      "source_index": 3,
      "index": 3,
      "doc": " Updates the stake amount of an existing validator in the active set.\n\n # Arguments\n * `set` - The pending active set to modify\n * `validator_id` - The ID of the validator to update\n * `staked_amount` - The new stake amount for the validator\n\n # Returns\n * `bool` - Whether the validator was found and updated",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "staked_amount",
          "type_": "u64"
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "remove": {
      "source_index": 4,
      "index": 4,
      "doc": " Removes a validator from the active set.\n\n # Arguments\n * `set` - The pending active set to modify\n * `validator_id` - The ID of the validator to remove\n\n # Returns\n * `bool` - Whether the validator was found and removed\n\n # Aborts\n * `EBelowMinValidatorCount` - If removal would violate the minimum validator count",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "find_validator_index": {
      "source_index": 5,
      "index": 5,
      "doc": " Finds the index of a validator in the active set using linear search.\n\n # Arguments\n * `set` - The pending active set to search\n * `validator_id` - The ID of the validator to find\n\n # Returns\n * `Option<u64>` - The index of the validator, or None if not found",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              {
                "phantom": false,
                "argument": "u64"
              }
            ]
          }
        }
      ]
    },
    "set_max_validator_count": {
      "source_index": 6,
      "index": 6,
      "doc": " Sets the maximum size of the active set.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "max_validator_count",
          "type_": "u64"
        }
      ],
      "return_": []
    },
    "set_min_validator_count": {
      "source_index": 7,
      "index": 7,
      "doc": " Sets the minimum number of validators required in the active set.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "min_validator_count",
          "type_": "u64"
        }
      ],
      "return_": []
    },
    "set_max_validator_change_count": {
      "source_index": 8,
      "index": 8,
      "doc": " Sets the maximum number of validator changes allowed per epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "max_validator_change_count",
          "type_": "u64"
        }
      ],
      "return_": []
    },
    "reset_validator_changes": {
      "source_index": 9,
      "index": 9,
      "doc": " Resets the validator changes count (typically called at the start of a new epoch).",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "set_min_validator_joining_stake": {
      "source_index": 10,
      "index": 10,
      "doc": " Sets the minimum amount of staked IKA required to join the active set.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "min_validator_joining_stake",
          "type_": "u64"
        }
      ],
      "return_": []
    },
    "max_validator_count": {
      "source_index": 11,
      "index": 11,
      "doc": " Returns the maximum size of the active set.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "min_validator_count": {
      "source_index": 12,
      "index": 12,
      "doc": " Returns the minimum number of validators required in the active set.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "max_validator_change_count": {
      "source_index": 13,
      "index": 13,
      "doc": " Returns the maximum number of validator changes allowed per epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "size": {
      "source_index": 14,
      "index": 14,
      "doc": " Returns the current size of the active set.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "min_validator_joining_stake": {
      "source_index": 15,
      "index": 15,
      "doc": " Returns the minimum amount of staked IKA required to join the active set.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "total_stake": {
      "source_index": 16,
      "index": 16,
      "doc": " Returns the total amount of staked IKA in the active set.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "active_ids": {
      "source_index": 17,
      "index": 17,
      "doc": " Returns the IDs of all validators in the active set.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ]
    },
    "active_ids_and_stake": {
      "source_index": 18,
      "index": 18,
      "doc": " Returns the IDs and stake amounts of all validators in the active set.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "vector": "u64"
        }
      ]
    },
    "insert": {
      "source_index": 19,
      "index": 19,
      "doc": " Inserts a validator into the active set with smart capacity management.\n\n If the set is full, the validator with the smallest stake is removed to make space\n for the new validator (if the new validator has higher stake).\n\n # Arguments\n * `set` - The pending active set to modify\n * `validator_id` - The ID of the validator to insert\n * `staked_amount` - The stake amount for the validator\n\n # Returns\n * `bool` - Whether the validator was successfully inserted\n * `Option<ID>` - The ID of any validator that was removed, or None\n\n # Aborts\n * `EDuplicateInsertion` - If the validator is already in the set\n * `EMaxValidatorChangeReached` - If the change would exceed the epoch limit",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "staked_amount",
          "type_": "u64"
        }
      ],
      "return_": [
        "bool",
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              {
                "phantom": false,
                "argument": {
                  "Datatype": {
                    "module": {
                      "address": "sui",
                      "name": "object"
                    },
                    "name": "ID",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "insert_sorted": {
      "source_index": 20,
      "index": 20,
      "doc": " Inserts a validator entry into the sorted vector maintaining ascending order by stake.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "entry",
          "type_": {
            "Datatype": {
              "module": {
                "address": "ika_system",
                "name": "pending_active_set"
              },
              "name": "PendingActiveSetEntry",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "reposition_validator": {
      "source_index": 21,
      "index": 21,
      "doc": " Repositions a validator in the sorted vector after its stake has been updated.\n This maintains the ascending order by stake amount.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "set",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "index",
          "type_": "u64"
        }
      ],
      "return_": []
    }
  },
  "structs": {
    "PendingActiveSetEntry": {
      "index": 0,
      "doc": " Represents a single validator entry in the active set",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop",
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "validator_id": {
            "index": 0,
            "doc": " The ID of the validator",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          },
          "staked_amount": {
            "index": 1,
            "doc": " The amount of IKA staked by this validator",
            "type_": "u64"
          }
        }
      }
    },
    "PendingActiveSet": {
      "index": 1,
      "doc": " The active set of validators, a smart collection that only stores up\n to a max size of validators.\n Additionally, the active set tracks the total amount of staked IKA to make\n the calculation of the rewards and voting power distribution easier.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop",
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "min_validator_count": {
            "index": 0,
            "doc": " The minimum number of validators required in the active set",
            "type_": "u64"
          },
          "max_validator_count": {
            "index": 1,
            "doc": " The maximum number of validators in the active set",
            "type_": "u64"
          },
          "min_validator_joining_stake": {
            "index": 2,
            "doc": " The minimum amount of staked IKA needed to enter the active set. This is used to\n determine if a storage validator can be added to the active set",
            "type_": "u64"
          },
          "max_validator_change_count": {
            "index": 3,
            "doc": " The maximum number of validators that can be added or removed to the active set in an epoch",
            "type_": "u64"
          },
          "validators": {
            "index": 4,
            "doc": " The list of validators in the active set and their stake",
            "type_": {
              "vector": {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "pending_active_set"
                  },
                  "name": "PendingActiveSetEntry",
                  "type_arguments": []
                }
              }
            }
          },
          "total_stake": {
            "index": 5,
            "doc": " The total amount of staked IKA in the active set",
            "type_": "u64"
          },
          "validator_changes": {
            "index": 6,
            "doc": " The list of validators that have been added or removed to the active set in the current epoch",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "vec_set"
                },
                "name": "VecSet",
                "type_arguments": [
                  {
                    "phantom": false,
                    "argument": {
                      "Datatype": {
                        "module": {
                          "address": "sui",
                          "name": "object"
                        },
                        "name": "ID",
                        "type_arguments": []
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "enums": {}
}