{
  "id": {
    "address": "ika_system",
    "name": "system_inner"
  },
  "doc": null,
  "immediate_dependencies": [
    {
      "address": "ika",
      "name": "ika"
    },
    {
      "address": "ika_common",
      "name": "advance_epoch_approver"
    },
    {
      "address": "ika_common",
      "name": "bls_committee"
    },
    {
      "address": "ika_common",
      "name": "protocol_cap"
    },
    {
      "address": "ika_common",
      "name": "system_current_status_info"
    },
    {
      "address": "ika_common",
      "name": "system_object_cap"
    },
    {
      "address": "ika_common",
      "name": "upgrade_package_approver"
    },
    {
      "address": "ika_common",
      "name": "validator_cap"
    },
    {
      "address": "ika_system",
      "name": "pending_active_set"
    },
    {
      "address": "ika_system",
      "name": "protocol_treasury"
    },
    {
      "address": "ika_system",
      "name": "staked_ika"
    },
    {
      "address": "ika_system",
      "name": "token_exchange_rate"
    },
    {
      "address": "ika_system",
      "name": "validator_metadata"
    },
    {
      "address": "ika_system",
      "name": "validator_set"
    },
    {
      "address": "std",
      "name": "option"
    },
    {
      "address": "std",
      "name": "string"
    },
    {
      "address": "std",
      "name": "vector"
    },
    {
      "address": "sui",
      "name": "bag"
    },
    {
      "address": "sui",
      "name": "balance"
    },
    {
      "address": "sui",
      "name": "bcs"
    },
    {
      "address": "sui",
      "name": "clock"
    },
    {
      "address": "sui",
      "name": "coin"
    },
    {
      "address": "sui",
      "name": "event"
    },
    {
      "address": "sui",
      "name": "object"
    },
    {
      "address": "sui",
      "name": "package"
    },
    {
      "address": "sui",
      "name": "table"
    },
    {
      "address": "sui",
      "name": "table_vec"
    },
    {
      "address": "sui",
      "name": "tx_context"
    },
    {
      "address": "sui",
      "name": "vec_map"
    },
    {
      "address": "sui",
      "name": "vec_set"
    }
  ],
  "attributes": [],
  "functions": {
    "create": {
      "source_index": 0,
      "index": 0,
      "doc": " Create a new IkaSystemState object and make it shared.\n This function will be called only once in init.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "system_object_cap",
          "type_": {
            "Datatype": {
              "module": {
                "address": "ika_common",
                "name": "system_object_cap"
              },
              "name": "SystemObjectCap",
              "type_arguments": []
            }
          }
        },
        {
          "name": "upgrade_caps",
          "type_": {
            "vector": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "package"
                },
                "name": "UpgradeCap",
                "type_arguments": []
              }
            }
          }
        },
        {
          "name": "validator_set",
          "type_": {
            "Datatype": {
              "module": {
                "address": "ika_system",
                "name": "validator_set"
              },
              "name": "ValidatorSet",
              "type_arguments": []
            }
          }
        },
        {
          "name": "protocol_version",
          "type_": "u64"
        },
        {
          "name": "epoch_start_timestamp_ms",
          "type_": "u64"
        },
        {
          "name": "epoch_duration_ms",
          "type_": "u64"
        },
        {
          "name": "stake_subsidy_start_epoch",
          "type_": "u64"
        },
        {
          "name": "protocol_treasury",
          "type_": {
            "Datatype": {
              "module": {
                "address": "ika_system",
                "name": "protocol_treasury"
              },
              "name": "ProtocolTreasury",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_system",
              "name": "system_inner"
            },
            "name": "SystemInner",
            "type_arguments": []
          }
        },
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "protocol_cap"
            },
            "name": "ProtocolCap",
            "type_arguments": []
          }
        }
      ]
    },
    "initialize": {
      "source_index": 1,
      "index": 1,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "max_validator_change_count",
          "type_": "u64"
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "protocol_cap"
                  },
                  "name": "ProtocolCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "advance_epoch_approver"
            },
            "name": "AdvanceEpochApprover",
            "type_arguments": []
          }
        }
      ]
    },
    "request_add_validator_candidate": {
      "source_index": 2,
      "index": 2,
      "doc": " Can be called by anyone who wishes to become a validator candidate and starts accusing delegated\n stakes in their staking pool. Once they have at least `MIN_VALIDATOR_JOINING_STAKE` amount of stake they\n can call `request_add_validator` to officially become an active validator at the next epoch.\n Aborts if the caller is already a pending or active validator, or a validator candidate.\n Note: `proof_of_possession_bytes` MUST be a valid signature using proof_of_possession_sender and protocol_pubkey_bytes.\n To produce a valid PoP, run [fn test_proof_of_possession_bytes].",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "name",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "protocol_pubkey_bytes",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "network_pubkey_bytes",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "consensus_pubkey_bytes",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "mpc_data_bytes",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "table_vec"
              },
              "name": "TableVec",
              "type_arguments": [
                {
                  "phantom": true,
                  "argument": {
                    "vector": "u8"
                  }
                }
              ]
            }
          }
        },
        {
          "name": "proof_of_possession_bytes",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "network_address",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "p2p_address",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "consensus_address",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "commission_rate",
          "type_": "u16"
        },
        {
          "name": "metadata",
          "type_": {
            "Datatype": {
              "module": {
                "address": "ika_system",
                "name": "validator_metadata"
              },
              "name": "ValidatorMetadata",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "validator_cap"
            },
            "name": "ValidatorCap",
            "type_arguments": []
          }
        },
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "validator_cap"
            },
            "name": "ValidatorOperationCap",
            "type_arguments": []
          }
        },
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "validator_cap"
            },
            "name": "ValidatorCommissionCap",
            "type_arguments": []
          }
        }
      ]
    },
    "request_remove_validator_candidate": {
      "source_index": 3,
      "index": 3,
      "doc": " Called by a validator candidate to remove themselves from the candidacy. After this call\n their staking pool becomes deactivate.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "request_add_validator": {
      "source_index": 4,
      "index": 4,
      "doc": " Called by a validator candidate to add themselves to the active validator set beginning next epoch.\n Aborts if the validator is a duplicate with one of the pending or active validators, or if the amount of\n stake the validator has doesn't meet the min threshold, or if the number of new validators for the next\n epoch has already reached the maximum.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "request_remove_validator": {
      "source_index": 5,
      "index": 5,
      "doc": " A validator can call this function to request a removal in the next epoch.\n We use the sender of `ctx` to look up the validator\n (i.e. sender must match the sui_address in the validator).\n At the end of the epoch, the `validator` object will be returned to the sui_address\n of the validator.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "validator_metadata": {
      "source_index": 6,
      "index": 6,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_system",
              "name": "validator_metadata"
            },
            "name": "ValidatorMetadata",
            "type_arguments": []
          }
        }
      ]
    },
    "set_validator_metadata": {
      "source_index": 7,
      "index": 7,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "metadata",
          "type_": {
            "Datatype": {
              "module": {
                "address": "ika_system",
                "name": "validator_metadata"
              },
              "name": "ValidatorMetadata",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "set_next_commission": {
      "source_index": 8,
      "index": 8,
      "doc": " A validator can call this function to set a new commission rate, updated at the end of\n the epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "new_commission_rate",
          "type_": "u16"
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "request_add_stake": {
      "source_index": 9,
      "index": 9,
      "doc": " Add stake to a validator's staking pool.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "stake",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "coin"
              },
              "name": "Coin",
              "type_arguments": [
                {
                  "phantom": true,
                  "argument": {
                    "Datatype": {
                      "module": {
                        "address": "ika",
                        "name": "ika"
                      },
                      "name": "IKA",
                      "type_arguments": []
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "name": "validator_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_system",
              "name": "staked_ika"
            },
            "name": "StakedIka",
            "type_arguments": []
          }
        }
      ]
    },
    "request_withdraw_stake": {
      "source_index": 10,
      "index": 10,
      "doc": " Withdraw some portion of a stake from a validator's staking pool.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "staked_ika",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "staked_ika"
                  },
                  "name": "StakedIka",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "withdraw_stake": {
      "source_index": 11,
      "index": 11,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "staked_ika",
          "type_": {
            "Datatype": {
              "module": {
                "address": "ika_system",
                "name": "staked_ika"
              },
              "name": "StakedIka",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "sui",
              "name": "coin"
            },
            "name": "Coin",
            "type_arguments": [
              {
                "phantom": true,
                "argument": {
                  "Datatype": {
                    "module": {
                      "address": "ika",
                      "name": "ika"
                    },
                    "name": "IKA",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "report_validator": {
      "source_index": 12,
      "index": 12,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "reportee_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "undo_report_validator": {
      "source_index": 13,
      "index": 13,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "reportee_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "rotate_operation_cap": {
      "source_index": 14,
      "index": 14,
      "doc": " Create a new `ValidatorOperationCap` and registers it.\n The original object is thus revoked.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "validator_cap"
            },
            "name": "ValidatorOperationCap",
            "type_arguments": []
          }
        }
      ]
    },
    "rotate_commission_cap": {
      "source_index": 15,
      "index": 15,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "validator_cap"
            },
            "name": "ValidatorCommissionCap",
            "type_arguments": []
          }
        }
      ]
    },
    "collect_commission": {
      "source_index": 16,
      "index": 16,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorCommissionCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "amount",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "option"
              },
              "name": "Option",
              "type_arguments": [
                {
                  "phantom": false,
                  "argument": "u64"
                }
              ]
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "sui",
              "name": "coin"
            },
            "name": "Coin",
            "type_arguments": [
              {
                "phantom": true,
                "argument": {
                  "Datatype": {
                    "module": {
                      "address": "ika",
                      "name": "ika"
                    },
                    "name": "IKA",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "set_validator_name": {
      "source_index": 17,
      "index": 17,
      "doc": " Sets a validator's name.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "name",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "set_next_epoch_network_address": {
      "source_index": 18,
      "index": 18,
      "doc": " Sets a validator's network address.\n The change will only take effects starting from the next epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "network_address",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "set_next_epoch_p2p_address": {
      "source_index": 19,
      "index": 19,
      "doc": " Sets a validator's p2p address.\n The change will only take effects starting from the next epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "p2p_address",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "set_next_epoch_consensus_address": {
      "source_index": 20,
      "index": 20,
      "doc": " Sets a validator's consensus address.\n The change will only take effects starting from the next epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "consensus_address",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "set_next_epoch_protocol_pubkey_bytes": {
      "source_index": 21,
      "index": 21,
      "doc": " Sets a validator's public key of protocol key and proof of possession.\n The change will only take effects starting from the next epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "protocol_pubkey_bytes",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "proof_of_possession_bytes",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "set_next_epoch_network_pubkey_bytes": {
      "source_index": 22,
      "index": 22,
      "doc": " Sets a validator's public key of network key.\n The change will only take effects starting from the next epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "network_pubkey_bytes",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "set_next_epoch_consensus_pubkey_bytes": {
      "source_index": 23,
      "index": 23,
      "doc": " Sets a validator's public key of worker key.\n The change will only take effects starting from the next epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "consensus_pubkey_bytes",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "set_next_epoch_mpc_data_bytes": {
      "source_index": 24,
      "index": 24,
      "doc": " Sets a validator's MPC public data.\n The change will only take effects starting from the next epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "mpc_data_bytes",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "table_vec"
              },
              "name": "TableVec",
              "type_arguments": [
                {
                  "phantom": true,
                  "argument": {
                    "vector": "u8"
                  }
                }
              ]
            }
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              {
                "phantom": false,
                "argument": {
                  "Datatype": {
                    "module": {
                      "address": "sui",
                      "name": "table_vec"
                    },
                    "name": "TableVec",
                    "type_arguments": [
                      {
                        "phantom": true,
                        "argument": {
                          "vector": "u8"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "is_mid_epoch_time": {
      "source_index": 25,
      "index": 25,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "is_end_epoch_time": {
      "source_index": 26,
      "index": 26,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "assert_mid_epoch_time": {
      "source_index": 27,
      "index": 27,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "assert_end_epoch_time": {
      "source_index": 28,
      "index": 28,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "create_system_current_status_info": {
      "source_index": 29,
      "index": 29,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "system_current_status_info"
            },
            "name": "SystemCurrentStatusInfo",
            "type_arguments": []
          }
        }
      ]
    },
    "initiate_advance_epoch": {
      "source_index": 30,
      "index": 30,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "advance_epoch_approver"
            },
            "name": "AdvanceEpochApprover",
            "type_arguments": []
          }
        }
      ]
    },
    "advance_epoch": {
      "source_index": 31,
      "index": 31,
      "doc": " This function should be called at the end of an epoch, and advances the system to the next epoch.\n It does the following things:\n 1. Add storage charge to the storage fund.\n 2. Burn the storage rebates from the storage fund. These are already refunded to transaction sender's\n    gas coins.\n 3. Distribute computation charge to validator stake.\n 4. Update all validators.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "advance_epoch_approver",
          "type_": {
            "Datatype": {
              "module": {
                "address": "ika_common",
                "name": "advance_epoch_approver"
              },
              "name": "AdvanceEpochApprover",
              "type_arguments": []
            }
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "initiate_mid_epoch_reconfiguration": {
      "source_index": 32,
      "index": 32,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "epoch": {
      "source_index": 33,
      "index": 33,
      "doc": " Return the current epoch number. Useful for applications that need a coarse-grained concept of time,\n since epochs are ever-increasing and epoch changes are intended to happen every 24 hours.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "protocol_version": {
      "source_index": 34,
      "index": 34,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "epoch_start_timestamp_ms": {
      "source_index": 35,
      "index": 35,
      "doc": " Returns unix timestamp of the start of current epoch",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "validator_stake_amount": {
      "source_index": 36,
      "index": 36,
      "doc": " Returns the total amount staked with `validator_id`.\n Aborts if `validator_id` is not an active validator.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "get_reporters_of": {
      "source_index": 37,
      "index": 37,
      "doc": " Returns all the validators who are currently reporting `validator_id`",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "sui",
              "name": "vec_set"
            },
            "name": "VecSet",
            "type_arguments": [
              {
                "phantom": false,
                "argument": {
                  "Datatype": {
                    "module": {
                      "address": "sui",
                      "name": "object"
                    },
                    "name": "ID",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "token_exchange_rates": {
      "source_index": 38,
      "index": 38,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "table"
                },
                "name": "Table",
                "type_arguments": [
                  {
                    "phantom": true,
                    "argument": "u64"
                  },
                  {
                    "phantom": true,
                    "argument": {
                      "Datatype": {
                        "module": {
                          "address": "ika_system",
                          "name": "token_exchange_rate"
                        },
                        "name": "TokenExchangeRate",
                        "type_arguments": []
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "active_committee": {
      "source_index": 39,
      "index": 39,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "bls_committee"
            },
            "name": "BlsCommittee",
            "type_arguments": []
          }
        }
      ]
    },
    "next_epoch_active_committee": {
      "source_index": 40,
      "index": 40,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              {
                "phantom": false,
                "argument": {
                  "Datatype": {
                    "module": {
                      "address": "ika_common",
                      "name": "bls_committee"
                    },
                    "name": "BlsCommittee",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "verify_validator_cap": {
      "source_index": 41,
      "index": 41,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "validator_cap"
            },
            "name": "VerifiedValidatorCap",
            "type_arguments": []
          }
        }
      ]
    },
    "verify_operation_cap": {
      "source_index": 42,
      "index": 42,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "validator_cap"
            },
            "name": "VerifiedValidatorOperationCap",
            "type_arguments": []
          }
        }
      ]
    },
    "verify_commission_cap": {
      "source_index": 43,
      "index": 43,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorCommissionCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "validator_cap"
            },
            "name": "VerifiedValidatorCommissionCap",
            "type_arguments": []
          }
        }
      ]
    },
    "verify_protocol_cap_impl": {
      "source_index": 44,
      "index": 44,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "protocol_cap"
                  },
                  "name": "ProtocolCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "add_upgrade_cap_by_cap": {
      "source_index": 45,
      "index": 45,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "upgrade_cap",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "package"
              },
              "name": "UpgradeCap",
              "type_arguments": []
            }
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "protocol_cap"
                  },
                  "name": "ProtocolCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "authorize_upgrade": {
      "source_index": 46,
      "index": 46,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "package_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "sui",
              "name": "package"
            },
            "name": "UpgradeTicket",
            "type_arguments": []
          }
        },
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "upgrade_package_approver"
            },
            "name": "UpgradePackageApprover",
            "type_arguments": []
          }
        }
      ]
    },
    "commit_upgrade": {
      "source_index": 47,
      "index": 47,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "receipt",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "package"
              },
              "name": "UpgradeReceipt",
              "type_arguments": []
            }
          }
        },
        {
          "name": "upgrade_package_approver",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "upgrade_package_approver"
                  },
                  "name": "UpgradePackageApprover",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "finalize_upgrade": {
      "source_index": 48,
      "index": 48,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "upgrade_package_approver",
          "type_": {
            "Datatype": {
              "module": {
                "address": "ika_common",
                "name": "upgrade_package_approver"
              },
              "name": "UpgradePackageApprover",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "process_checkpoint_message_by_quorum": {
      "source_index": 49,
      "index": 49,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "signature",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "signers_bitmap",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "message",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "process_checkpoint_message": {
      "source_index": 50,
      "index": 50,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "message",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "verify_protocol_cap": {
      "source_index": 51,
      "index": 51,
      "doc": " === Protocol Cap Functions ===",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "protocol_cap"
                  },
                  "name": "ProtocolCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "ika_common",
              "name": "protocol_cap"
            },
            "name": "VerifiedProtocolCap",
            "type_arguments": []
          }
        }
      ]
    },
    "set_approved_upgrade_by_cap": {
      "source_index": 52,
      "index": 52,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "package_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "digest",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "option"
              },
              "name": "Option",
              "type_arguments": [
                {
                  "phantom": false,
                  "argument": {
                    "vector": "u8"
                  }
                }
              ]
            }
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "protocol_cap"
                  },
                  "name": "ProtocolCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "set_or_remove_witness_approving_advance_epoch_by_cap": {
      "source_index": 53,
      "index": 53,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "witness_type",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "remove",
          "type_": "bool"
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "protocol_cap"
                  },
                  "name": "ProtocolCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "process_checkpoint_message_by_cap": {
      "source_index": 54,
      "index": 54,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "message",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_common",
                    "name": "protocol_cap"
                  },
                  "name": "ProtocolCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "set_approved_upgrade": {
      "source_index": 55,
      "index": 55,
      "doc": " === Private Functions ===\n Set approved upgrade for a package id.\n If `digest` is `some`, it will be inserted into the `approved_upgrades` map.\n If `digest` is `none`, it will be removed from the `approved_upgrades` map.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "package_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "digest",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "option"
              },
              "name": "Option",
              "type_arguments": [
                {
                  "phantom": false,
                  "argument": {
                    "vector": "u8"
                  }
                }
              ]
            }
          }
        }
      ],
      "return_": []
    },
    "set_or_remove_witness_approving_advance_epoch": {
      "source_index": 56,
      "index": 56,
      "doc": " Set or remove a witness approving advance epoch.\n If `remove` is `true`, the witness will be removed from the list of witnesses approving advance epoch.\n If `remove` is `false`, the witness will be added to the list of witnesses approving advance epoch.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "witness_type",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "remove",
          "type_": "bool"
        }
      ],
      "return_": []
    },
    "calculate_rewards": {
      "source_index": 57,
      "index": 57,
      "doc": " Calculate the rewards for an amount with value `staked_principal`, staked in the validator with\n the given `validator_id` between `activation_epoch` and `withdraw_epoch`.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "sui",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "staked_principal",
          "type_": "u64"
        },
        {
          "name": "activation_epoch",
          "type_": "u64"
        },
        {
          "name": "withdraw_epoch",
          "type_": "u64"
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "can_withdraw_staked_ika_early": {
      "source_index": 58,
      "index": 58,
      "doc": " Check whether StakedIka can be withdrawn directly.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "staked_ika",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "staked_ika"
                  },
                  "name": "StakedIka",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "epoch_duration_ms": {
      "source_index": 59,
      "index": 59,
      "doc": " Returns the duration of an epoch in milliseconds.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "ika_system",
                    "name": "system_inner"
                  },
                  "name": "SystemInner",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    }
  },
  "structs": {
    "SystemInner": {
      "index": 0,
      "doc": " Uses SystemParametersV1 as the parameters.",
      "attributes": [],
      "abilities": [
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": " The current epoch ID, starting from 0.",
            "type_": "u64"
          },
          "epoch_start_tx_digest": {
            "index": 1,
            "doc": null,
            "type_": {
              "vector": "u8"
            }
          },
          "system_object_cap": {
            "index": 2,
            "doc": " The system object cap for common modules.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "ika_common",
                  "name": "system_object_cap"
                },
                "name": "SystemObjectCap",
                "type_arguments": []
              }
            }
          },
          "protocol_version": {
            "index": 3,
            "doc": " The current protocol version, starting from 1.",
            "type_": "u64"
          },
          "next_protocol_version": {
            "index": 4,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "phantom": false,
                    "argument": "u64"
                  }
                ]
              }
            }
          },
          "upgrade_caps": {
            "index": 5,
            "doc": " Upgrade caps for this package and others like ika coin of the ika protocol.",
            "type_": {
              "vector": {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "package"
                  },
                  "name": "UpgradeCap",
                  "type_arguments": []
                }
              }
            }
          },
          "approved_upgrades": {
            "index": 6,
            "doc": " Approved upgrade for package id to its approved digest.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "vec_map"
                },
                "name": "VecMap",
                "type_arguments": [
                  {
                    "phantom": false,
                    "argument": {
                      "Datatype": {
                        "module": {
                          "address": "sui",
                          "name": "object"
                        },
                        "name": "ID",
                        "type_arguments": []
                      }
                    }
                  },
                  {
                    "phantom": false,
                    "argument": {
                      "vector": "u8"
                    }
                  }
                ]
              }
            }
          },
          "validator_set": {
            "index": 7,
            "doc": " Contains all information about the validators.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "ika_system",
                  "name": "validator_set"
                },
                "name": "ValidatorSet",
                "type_arguments": []
              }
            }
          },
          "epoch_duration_ms": {
            "index": 8,
            "doc": " The duration of an epoch, in milliseconds.",
            "type_": "u64"
          },
          "stake_subsidy_start_epoch": {
            "index": 9,
            "doc": " The starting epoch in which stake subsidies start being paid out",
            "type_": "u64"
          },
          "protocol_treasury": {
            "index": 10,
            "doc": " Schedule of stake subsidies given out each epoch.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "ika_system",
                  "name": "protocol_treasury"
                },
                "name": "ProtocolTreasury",
                "type_arguments": []
              }
            }
          },
          "epoch_start_timestamp_ms": {
            "index": 11,
            "doc": " Unix timestamp of the current epoch start.",
            "type_": "u64"
          },
          "last_processed_checkpoint_sequence_number": {
            "index": 12,
            "doc": " The last processed checkpoint sequence number.",
            "type_": "u64"
          },
          "previous_epoch_last_checkpoint_sequence_number": {
            "index": 13,
            "doc": " The last checkpoint sequence number of the previous epoch.",
            "type_": "u64"
          },
          "total_messages_processed": {
            "index": 14,
            "doc": " The total messages processed.",
            "type_": "u64"
          },
          "remaining_rewards": {
            "index": 15,
            "doc": " The fees paid for computation.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "balance"
                },
                "name": "Balance",
                "type_arguments": [
                  {
                    "phantom": true,
                    "argument": {
                      "Datatype": {
                        "module": {
                          "address": "ika",
                          "name": "ika"
                        },
                        "name": "IKA",
                        "type_arguments": []
                      }
                    }
                  }
                ]
              }
            }
          },
          "authorized_protocol_cap_ids": {
            "index": 16,
            "doc": " List of authorized protocol cap ids.",
            "type_": {
              "vector": {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "object"
                  },
                  "name": "ID",
                  "type_arguments": []
                }
              }
            }
          },
          "witnesses_approving_advance_epoch": {
            "index": 17,
            "doc": " List of witnesses approving advance epoch.\n as part of the epoch advancement, we have to collect approval from all witnesses.",
            "type_": {
              "vector": {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            }
          },
          "received_end_of_publish": {
            "index": 18,
            "doc": " Whether the system has received the end of publish message.",
            "type_": "bool"
          },
          "extra_fields": {
            "index": 19,
            "doc": " Any extra fields that's not defined statically.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "bag"
                },
                "name": "Bag",
                "type_arguments": []
              }
            }
          }
        }
      }
    },
    "SystemEpochInfoEvent": {
      "index": 1,
      "doc": " Event containing system-level epoch information, emitted during\n the epoch advancement message.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "protocol_version": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          },
          "total_stake": {
            "index": 2,
            "doc": null,
            "type_": "u64"
          },
          "stake_subsidy_amount": {
            "index": 3,
            "doc": null,
            "type_": "u64"
          },
          "total_computation_fees": {
            "index": 4,
            "doc": null,
            "type_": "u64"
          },
          "total_stake_rewards_distributed": {
            "index": 5,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "SystemCheckpointInfoEvent": {
      "index": 2,
      "doc": " Event containing system-level checkpoint information, emitted during\n the system checkpoint submission message.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "sequence_number": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "SetNextProtocolVersionEvent": {
      "index": 3,
      "doc": " Event emitted when protocol version is set via checkpoint message.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "next_protocol_version": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "SetEpochDurationMsEvent": {
      "index": 4,
      "doc": " Event emitted when epoch duration is set via checkpoint message.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "epoch_duration_ms": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "SetStakeSubsidyStartEpochEvent": {
      "index": 5,
      "doc": " Event emitted when stake subsidy start epoch is set via checkpoint message.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "stake_subsidy_start_epoch": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "SetStakeSubsidyRateEvent": {
      "index": 6,
      "doc": " Event emitted when stake subsidy rate is set via checkpoint message.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "stake_subsidy_rate": {
            "index": 1,
            "doc": null,
            "type_": "u16"
          }
        }
      }
    },
    "SetStakeSubsidyPeriodLengthEvent": {
      "index": 7,
      "doc": " Event emitted when stake subsidy period length is set via checkpoint message.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "stake_subsidy_period_length": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "SetMinValidatorCountEvent": {
      "index": 8,
      "doc": " Event emitted when minimum validator count is set via checkpoint message.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "min_validator_count": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "SetMaxValidatorCountEvent": {
      "index": 9,
      "doc": " Event emitted when maximum validator count is set via checkpoint message.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "max_validator_count": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "SetMinValidatorJoiningStakeEvent": {
      "index": 10,
      "doc": " Event emitted when minimum validator joining stake is set via checkpoint message.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "min_validator_joining_stake": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "SetMaxValidatorChangeCountEvent": {
      "index": 11,
      "doc": " Event emitted when maximum validator change count is set via checkpoint message.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "max_validator_change_count": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "SetRewardSlashingRateEvent": {
      "index": 12,
      "doc": " Event emitted when reward slashing rate is set via checkpoint message.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "reward_slashing_rate": {
            "index": 1,
            "doc": null,
            "type_": "u16"
          }
        }
      }
    },
    "SetApprovedUpgradeEvent": {
      "index": 13,
      "doc": " Event emitted when approved upgrade is set via checkpoint message.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "package_id": {
            "index": 1,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          },
          "digest": {
            "index": 2,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "phantom": false,
                    "argument": {
                      "vector": "u8"
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "EndOfPublishEvent": {
      "index": 14,
      "doc": " Event emitted when the epoch ends.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "SetOrRemoveWitnessApprovingAdvanceEpochEvent": {
      "index": 15,
      "doc": " Event emitted when witness approving advance epoch is set or removed via checkpoint message.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "witness_type": {
            "index": 1,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "remove": {
            "index": 2,
            "doc": null,
            "type_": "bool"
          }
        }
      }
    }
  },
  "enums": {}
}